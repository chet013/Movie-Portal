import { useParams } from 'react-router-dom';

import { useNavigate } from 'react-router-dom';

import { Loader } from '../../Components/loader';
import { useGetFilmQuery } from '../../api/movieApiSlice';
import styles from './index.module.css';
import { useState, useEffect } from 'react';

export const Movie = () => {
    const navigate = useNavigate()

    const { id } = useParams();
    const { data, error, isLoading } = useGetFilmQuery(id);

    const movie = data;

    const currentUser = JSON.parse(localStorage.getItem('current-user'));
    const [isFavorite, setIsFavorite] = useState(false);

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∏–ª—å–º –∏–∑–±—Ä–∞–Ω–Ω—ã–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        if (currentUser && currentUser.favoritesMoviesIds?.includes(id)) {
            setIsFavorite(true);
        }
    }, [currentUser, id]);

    const handleClickLike = () => {
        console.log(id)

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!currentUser || !currentUser.isAuthorized) {
            navigate('/login', { replace: true }); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω, –µ—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const storedData = JSON.parse(localStorage.getItem('moviPortal')) || { users: [] };
        const { users } = storedData;

        // –ò—â–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userIndex = users.findIndex((user) => user.login === currentUser.login);
        if (userIndex === -1) {

            return;
        }

        // –õ–æ–∫–∞–ª—å–Ω–∞—è –∫–æ–ø–∏—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let updatedFavorites = [...users[userIndex].favoritesMoviesIds];

        if (isFavorite) {
            // –£–¥–∞–ª—è–µ–º —Ñ–∏–ª—å–º –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
            updatedFavorites = updatedFavorites.filter((movieId) => movieId !== id);
        } else {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            updatedFavorites.push(id);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        users[userIndex].favoritesMoviesIds = updatedFavorites;
        localStorage.setItem('moviPortal', JSON.stringify({ users }));

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const updatedUser = { ...currentUser, favoritesMoviesIds: updatedFavorites };
        localStorage.setItem('current-user', JSON.stringify(updatedUser));

        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        setIsFavorite(!isFavorite);
    };

    if (error) {
        return <p className={styles.error}>{error}</p>;
    }

    return (
        <div className={styles.movie}>
            {isLoading ? (
                <Loader className={styles.loader} />
            ) : (
                <>
                    <div className={styles.movieDetails}>
                        <div className={styles.titleWrapper}>
                            <h1>{movie.Title}</h1>
                            <img src={movie.Poster} alt={movie.Title} className={styles.poster} />
                        </div>
                        <div className={styles.descriptionWrapper}>
                            <p>Year: {movie.Year}</p>
                            <p>Genre: {movie.Genre}</p>
                            <p>Plot: {movie.Plot}</p>
                            <p>Director: {movie.Director}</p>
                            <p>Actors: {movie.Actors}</p>
                            <div className={styles.managWrapper}>
                                <p>{isFavorite ? 'Remove from favorites' : 'Add to favorites'}</p>
                                <button
                                    onClick={handleClickLike}
                                    style={{ color: isFavorite ? 'red ' : 'black' }}
                                >
                                    {isFavorite ? 'üñ§' : '‚ù§Ô∏è'}
                                </button>
                            </div>
                        </div>
                    </div>
                </>
            )}
        </div>
    );
};