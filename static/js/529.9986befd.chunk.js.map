{"version":3,"file":"static/js/529.9986befd.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/Components/movie-card/index.module.css?c91d","Components/movie-card/MovieCard.jsx","webpack://portfolio/./src/Pages/favoritess/index.module.css?610c","Components/movie-card/FavoriteMovie.jsx","Pages/favoritess/Favorites.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"movie-card_card__tKSmz\",\"cardDark\":\"movie-card_cardDark__2I0gf\",\"logo\":\"movie-card_logo__94Gvj\",\"description\":\"movie-card_description__7lcQF\",\"descriptionDark\":\"movie-card_descriptionDark__0PvWe\"};","import PropTypes from 'prop-types';\nimport styles from './index.module.css';\nimport { useUser } from '../../app/context';\n\nexport const MovieCard = ({ poster, title, year }) => {\n\n    const { isDarkTheme } = useUser()\n\n    return (\n        <div className={!isDarkTheme ? styles.card : styles.cardDark}>\n            <img\n                className={styles.logo}\n                src={poster}\n                alt={title}\n            />\n            <div className={!isDarkTheme ? styles.description : styles.descriptionDark}>\n                <h2 className={styles.title}>{title}</h2>\n                <p>Year: {year}</p>\n            </div>\n        </div>\n    );\n};\n\nMovieCard.propTypes = {\n    poster: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"favoritess_container__0hBBK\",\"containerDark\":\"favoritess_containerDark__UNuG5\",\"moviesGrid\":\"favoritess_moviesGrid__aC7yU\",\"favoritesLoginContainer\":\"favoritess_favoritesLoginContainer__fC5Nf\",\"favoritesLoginContainerDark\":\"favoritess_favoritesLoginContainerDark__isGS8\",\"favoritesLoginDiscription\":\"favoritess_favoritesLoginDiscription__9u163\",\"logBtn\":\"favoritess_logBtn__Zu1ud\",\"movieButton\":\"favoritess_movieButton__Z8nHh\",\"loading\":\"favoritess_loading__SvNv7\",\"pagination\":\"favoritess_pagination__sRvUb\",\"pageButton\":\"favoritess_pageButton__35T3j\",\"activePage\":\"favoritess_activePage__ytSgx\",\"disabled\":\"favoritess_disabled__FuKNo\"};","import PropTypes from 'prop-types';\nimport { MovieCard } from './MovieCard';\nimport { useGetFilmQuery } from '../../api/movieApiSlice';\n\nexport const FavoriteMovie = ({ id }) => {\n    const { data: movie, error, isLoading } = useGetFilmQuery(id);\n\n    if (isLoading) return <p>Loading...</p>;\n    if (error) return <p>Error loading movie</p>;\n    if (!movie) return null;\n\n    return (\n        <MovieCard\n            poster={movie.Poster}\n            title={movie.Title}\n            year={movie.Year}\n        />\n    );\n};\n\nFavoriteMovie.propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default FavoriteMovie;","import { useState, useEffect } from 'react';\nimport styles from './index.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { useUser } from '../../app/context';\nimport { useDetectDevice } from '../../features/useDetectDevice';\nimport { FavoriteMovie } from '../../Components/movie-card/FavoriteMovie';\nimport { Loader } from '../../Components/loader/Loader';\n\nconst MOVIES_PER_PAGE = 7;\n\nexport default function Favorites() {\n    const { authorized, favoritesMoviesIds, loading, isDarkTheme } = useUser();\n    const navigate = useNavigate();\n    const isMobile = useDetectDevice();\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [favoritesMoviesIds]);\n\n    const totalPages = Math.ceil((favoritesMoviesIds?.length || 0) / MOVIES_PER_PAGE);\n    const startIndex = (currentPage - 1) * MOVIES_PER_PAGE;\n    const currentMovies = favoritesMoviesIds?.slice(startIndex, startIndex + MOVIES_PER_PAGE);\n\n    const handleNavigate = (id) => {\n        navigate(`/movie/${id}`);\n    };\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n    };\n\n    if (!authorized) {\n        return (\n            <div className={\n                !isDarkTheme ?\n                    `${styles.container} ${styles.favoritesLoginContainer}`\n                    :\n                    `${styles.containerDark} ${styles.favoritesLoginContainerDark}`}>\n                <p className={styles.favoritesLoginDiscription}>\n                    Please register or log in\n                </p>\n                <Button\n                    onClick={() => navigate('/login', { replace: false })}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    color=\"default\"\n                    variant=\"solid\"\n                    className={styles.logBtn}\n                >\n\n                    Login / Registration\n                </Button>\n            </div>\n        );\n    }\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    return (\n        <div className={\n            !isDarkTheme ? `${styles.container} ` : `${styles.containerDark} ${styles.favoritesDark}`}>\n            {favoritesMoviesIds?.length === 0 ? (\n                <p className={styles.emptyMessage}>You have no favorite movies yet.</p>\n            ) : (\n                <>\n                    <div className={styles.moviesGrid}>\n                        {currentMovies.map((id) => (\n                            <button\n                                key={id}\n                                className={styles.movieButton}\n                                onClick={() => handleNavigate(id)}\n                            >\n                                <FavoriteMovie id={id} />\n                            </button>\n                        ))}\n                    </div>\n\n                    {totalPages > 1 && (\n                        <div className={styles.pagination}>\n                            <button\n                                className={`${styles.pageButton} ${currentPage === 1 ? styles.disabled : ''}`}\n                                onClick={() => handlePageChange(currentPage - 1)}\n                                disabled={currentPage === 1}\n                            >\n                                Â«\n                            </button>\n\n                            {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\n                                <button\n                                    key={page}\n                                    className={`${styles.pageButton} ${page === currentPage ? styles.activePage : ''}`}\n                                    onClick={() => handlePageChange(page)}\n                                >\n                                    {page}\n                                </button>\n                            ))}\n\n                            <button\n                                className={`${styles.pageButton} ${currentPage === totalPages ? styles.disabled : ''}`}\n                                onClick={() => handlePageChange(currentPage + 1)}\n                                disabled={currentPage === totalPages}\n                            >\n                                Â»\n                            </button>\n                        </div>\n                    )}\n                </>\n            )\n            }\n        </div >\n    );\n};"],"names":["MovieCard","_ref","poster","title","year","isDarkTheme","useUser","_jsxs","className","styles","cardDark","card","children","_jsx","logo","src","alt","descriptionDark","description","FavoriteMovie","id","data","movie","error","isLoading","useGetFilmQuery","Poster","Title","Year","MOVIES_PER_PAGE","Favorites","authorized","favoritesMoviesIds","loading","navigate","useNavigate","currentPage","setCurrentPage","useDetectDevice","useState","useEffect","totalPages","Math","ceil","length","startIndex","currentMovies","slice","handlePageChange","page","window","scrollTo","top","behavior","Loader","containerDark","favoritesDark","container","emptyMessage","_Fragment","moviesGrid","map","movieButton","onClick","handleNavigate","pagination","pageButton","disabled","Array","from","_","index","activePage","favoritesLoginContainerDark","favoritesLoginContainer","favoritesLoginDiscription","Button","replace","type","htmlType","color","variant","logBtn"],"sourceRoot":""}