{"version":3,"file":"static/js/946.550c4e64.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/Components/movie-card/index.module.css?c91d","Components/movie-card/MovieCard.jsx","webpack://portfolio/./src/Pages/home/index.module.css?df55","redux/selectors/selectMovies.js","features/useDebounce.jsx","webpack://portfolio/./src/Components/serch-input/index.module.css?306a","Components/serch-input/Serchfild.jsx","webpack://portfolio/./src/Pages/404/index.module.css?a7bb","Pages/404/Errorpage.jsx","Pages/home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"movie-card_card__tKSmz\",\"cardDark\":\"movie-card_cardDark__2I0gf\",\"logo\":\"movie-card_logo__94Gvj\",\"description\":\"movie-card_description__7lcQF\",\"descriptionDark\":\"movie-card_descriptionDark__0PvWe\"};","import PropTypes from 'prop-types';\nimport styles from './index.module.css';\nimport { useUser } from '../../app/context';\n\nexport const MovieCard = ({ poster, title, year }) => {\n\n    const { isDarkTheme } = useUser()\n\n    return (\n        <div className={!isDarkTheme ? styles.card : styles.cardDark}>\n            <img\n                className={styles.logo}\n                src={poster}\n                alt={title}\n            />\n            <div className={!isDarkTheme ? styles.description : styles.descriptionDark}>\n                <h2 className={styles.title}>{title}</h2>\n                <p>Year: {year}</p>\n            </div>\n        </div>\n    );\n};\n\nMovieCard.propTypes = {\n    poster: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    year: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home_home__RgcN1\",\"darkHome\":\"home_darkHome__6D7p+\",\"notFound\":\"home_notFound__FzANZ\",\"movieList\":\"home_movieList__InYff\",\"darkMovieList\":\"home_darkMovieList__LReZ2\",\"movieButton\":\"home_movieButton__LDttX\",\"imageFilter\":\"home_imageFilter__EkimX\",\"filters\":\"home_filters__I1Sr9\"};","export const selectMovies = (state) => state.movies.list;","import { useState, useEffect } from 'react';\n\nconst useDebounce = (value, delay) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n};\n\nexport default useDebounce;","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"serch-input_searchContainer__8vMLo\",\"search\":\"serch-input_search__wIz8Y\",\"clearButton\":\"serch-input_clearButton__QGr0f\"};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useDebounce from '../../features/useDebounce';\nimport styles from './index.module.css';\n\nconst Searchfild = ({ onSearch }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const debouncedSearchTerm = useDebounce(searchTerm, 1800);\n\n    const handleChange = (e) => {\n        setSearchTerm(e.target.value);\n    };\n\n    const clearInput = () => {\n        setSearchTerm('');\n        onSearch('');\n    };\n\n    useEffect(() => {\n        if (debouncedSearchTerm) {\n            onSearch(debouncedSearchTerm);\n        }\n    }, [debouncedSearchTerm, onSearch]);\n\n    return (\n        <div className={styles.searchContainer}>\n            <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleChange}\n                placeholder=\"Start typing to search movie...\"\n                className={styles.search}\n            />\n\n            <button className={styles.clearButton} onClick={clearInput}>\n                &#10005;\n            </button>\n        </div>\n    );\n};\n\nSearchfild.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchfild;","// extracted by mini-css-extract-plugin\nexport default {\"errorContainer\":\"_404_errorContainer__VpePD\"};","import styles from './index.module.css'\n\nexport const ErrorPage = () => {\n    return (\n        <div className={styles.errorContainer}>\n            <h1>404</h1>\n            <p>Oops! The page you're looking for can't be found.</p>\n        </div >\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './index.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { setMovies } from '../../redux/slice/moviesSlice';\nimport { selectMovies } from '../../redux/selectors/selectMovies';\nimport { Loader } from '../../Components/loader/Loader';\nimport { MovieCard } from '../../Components/movie-card/MovieCard';\nimport SearchField from '../../Components/serch-input/Serchfild';\nimport { ErrorPage } from '../404/Errorpage';\nimport { useGetMoviesMutation } from '../../api/movieApiSlice';\nimport { useUser } from '../../app/context';\nimport fiters from '../../picktures/filter.png'\n\nexport default function Home() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const movies = useSelector(selectMovies);\n\n    const [isNotFound, setIsNotFound] = useState(false);\n    const [sortOrder, setSortOrder] = useState('default');\n\n    const { isDarkTheme } = useUser()\n\n    const [getMovies, { data, error, isLoading }] = useGetMoviesMutation();\n\n    useEffect(() => {\n        if (data) {\n            dispatch(setMovies(data.Search));\n        }\n    }, [data, dispatch]);\n\n    const handleSearch = async (word) => {\n        const response = await getMovies(word);\n\n        if (response.data.Response === 'False') {\n            setIsNotFound(true);\n            dispatch(setMovies([]));\n        } else {\n            setIsNotFound(false);\n        }\n    };\n\n    if (error) {\n        return <ErrorPage />;\n    }\n\n    const handleNavigate = (movieId) => {\n        navigate(`/movie/${movieId}`);\n    };\n\n\n    const sortedMovies = Array.isArray(movies) ? [...movies].sort((a, b) => {\n        switch (sortOrder) {\n            case 'year-asc':\n                return parseInt(a.Year) - parseInt(b.Year);\n            case 'year-desc':\n                return parseInt(b.Year) - parseInt(a.Year);\n            case 'title-asc':\n                return a.Title.localeCompare(b.Title);\n            case 'title-desc':\n                return b.Title.localeCompare(a.Title);\n            default:\n                return 0;\n        }\n    }) : [];\n\n    return (\n        <div className={!isDarkTheme ? styles.home : styles.darkHome}>\n            {isLoading ? (\n                <Loader />\n            ) : (\n                <div className={!isDarkTheme ? styles.movieList : styles.darkMovieList}>\n                    <h1>Movies</h1>\n                    <SearchField onSearch={handleSearch} />\n                    <div className={styles.filters}>\n                        <img\n                            className={styles.imageFilter}\n                            src={fiters}\n                            alt={'filter'}\n                        />\n\n                        <select\n                            value={sortOrder}\n                            onChange={(e) => setSortOrder(e.target.value)}\n                        >\n                            <option value=\"default\">Sort...</option>\n                            <option value=\"year-asc\">Year: Oldest First</option>\n                            <option value=\"year-desc\">Year: Newest First</option>\n                            <option value=\"title-asc\">Title: A → Z</option>\n                            <option value=\"title-desc\">Title: Z → A</option>\n                        </select>\n                    </div>\n\n                    {isNotFound ? (\n                        <div className={styles.notFound}>Ничего не найдено :(</div>\n                    ) : sortedMovies.length > 0 ? (\n                        sortedMovies.map((movie) => (\n                            <button\n                                key={movie.imdbID}\n                                className={styles.movieButton}\n                                onClick={() => handleNavigate(movie.imdbID)}\n                            >\n                                <MovieCard\n                                    className={styles.movieItem}\n                                    poster={movie.Poster}\n                                    title={movie.Title}\n                                    year={movie.Year}\n                                />\n                            </button>\n                        ))\n                    ) : (\n                        <div className={styles.notFound}>Начните поиск фильмов!</div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n\n};"],"names":["MovieCard","_ref","poster","title","year","isDarkTheme","useUser","_jsxs","className","styles","cardDark","card","children","_jsx","logo","src","alt","descriptionDark","description","selectMovies","state","movies","list","useDebounce","value","delay","debouncedValue","setDebouncedValue","useState","useEffect","handler","setTimeout","clearTimeout","onSearch","searchTerm","setSearchTerm","debouncedSearchTerm","type","onChange","e","target","placeholder","onClick","clearInput","ErrorPage","Home","dispatch","useDispatch","navigate","useNavigate","useSelector","isNotFound","setIsNotFound","sortOrder","setSortOrder","getMovies","data","error","isLoading","useGetMoviesMutation","setMovies","Search","sortedMovies","Array","isArray","sort","a","b","parseInt","Year","Title","localeCompare","darkHome","home","Loader","darkMovieList","movieList","SearchField","async","word","Response","filters","imageFilter","fiters","notFound","length","map","movie","movieButton","handleNavigate","movieId","imdbID","movieItem","Poster"],"sourceRoot":""}