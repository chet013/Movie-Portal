{"version":3,"file":"static/js/354.70aef726.chunk.js","mappings":"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","sources":["webpack://portfolio/./src/Pages/movie/index.module.css?e9bf","Pages/movie/Movie.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"movie_movie__bIsDA\",\"error\":\"movie_error__oZjra\",\"movieDark\":\"movie_movieDark__6as3w\",\"movieDetails\":\"movie_movieDetails__BcGRR\",\"movieDetailsDark\":\"movie_movieDetailsDark__hbleL\",\"titleWrapper\":\"movie_titleWrapper__RcwV3\",\"descriptionWrapper\":\"movie_descriptionWrapper__UzXyz\",\"descriptionWrapperDark\":\"movie_descriptionWrapperDark__3oHmm\",\"managWrapper\":\"movie_managWrapper__Joyvm\",\"movieDetailsMobile\":\"movie_movieDetailsMobile__ap46i\",\"movieDetailsMobileDark\":\"movie_movieDetailsMobileDark__Gh92U\"};","import { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { Loader } from '../../Components/loader/Loader';\nimport { useGetFilmQuery } from '../../api/movieApiSlice';\nimport styles from './index.module.css';\nimport { useState, useEffect } from 'react';\nimport { useUser } from '../../app/context';\nimport { useDetectDevice } from '../../features/useDetectDevice';\n\nexport default function Movie() {\n    const navigate = useNavigate();\n    const { id } = useParams();\n    const { data, error, isLoading } = useGetFilmQuery(id);\n    const { authorized, toggleFavorite, isDarkTheme } = useUser();\n    const isMobile = useDetectDevice()\n    const movie = data;\n\n    const [isFavorite, setIsFavorite] = useState(false);\n\n    useEffect(() => {\n        const currentUser = JSON.parse(localStorage.getItem('current-user'));\n        if (currentUser?.favoritesMoviesIds?.includes(id)) {\n            setIsFavorite(true);\n        } else {\n            setIsFavorite(false);\n        }\n    }, [id, authorized]);\n\n    const handleClickLike = () => {\n        if (!authorized) {\n            navigate('/login', { replace: true });\n            return;\n        }\n\n        const storedData = JSON.parse(localStorage.getItem('moviPortal')) || { users: [] };\n        const currentUser = JSON.parse(localStorage.getItem('current-user'));\n\n        const users = storedData.users.map((user) => {\n            if (user.login === currentUser.login) {\n                const updatedFavorites = isFavorite\n                    ? user.favoritesMoviesIds.filter((movieId) => movieId !== id)\n                    : [...new Set([...user.favoritesMoviesIds, id])];\n\n                return { ...user, favoritesMoviesIds: updatedFavorites };\n            }\n            return user;\n        });\n\n        localStorage.setItem('moviPortal', JSON.stringify({ users }));\n\n        const updatedUser = users.find((user) => user.login === currentUser.login);\n        localStorage.setItem('current-user', JSON.stringify(updatedUser));\n\n        setIsFavorite(!isFavorite);\n        toggleFavorite(id);\n    };\n\n    if (error) {\n        return <p className={styles.error}>{error}</p>;\n    }\n\n    return (\n        <div className={`\n            ${!isDarkTheme ? styles.movie : styles.movieDark} \n            ${isMobile ? styles.movieMobile : ''} \n            ${!isDarkTheme && isMobile ? styles.movieMobileDark : ''}\n        `}>\n            {isLoading ? (\n                <Loader className={styles.loader} />\n            ) : (\n                <>\n                    <div className={`\n                        ${!isDarkTheme ? styles.movieDetails : styles.movieDetailsDark}\n                        ${isMobile ? styles.movieDetailsMobile : ''}\n                        ${isMobile && isDarkTheme ? styles.movieDetailsMobileDark : ''}\n                        `}>\n                        <div className={!isDarkTheme ? styles.titleWrapper : styles.titleWrapperDark}>\n                            <h1>{movie.Title}</h1>\n                            <img src={movie.Poster} alt={movie.Title} className={styles.poster} />\n                        </div>\n                        <div className={!isDarkTheme ? styles.descriptionWrapper : styles.descriptionWrapperDark}>\n                            <p>Year: {movie.Year}</p>\n                            <p>Genre: {movie.Genre}</p>\n                            <p>Plot: {movie.Plot}</p>\n                            <p>Director: {movie.Director}</p>\n                            <p>Actors: {movie.Actors}</p>\n                            <div className={styles.managWrapper}>\n                                <p>{isFavorite ? 'Remove from favorites' : 'Add to favorites'}</p>\n                                <button\n                                    onClick={handleClickLike}\n                                    style={{ color: isFavorite ? 'red' : 'black' }}\n                                >\n                                    {isFavorite ? 'üñ§' : '‚ù§Ô∏è'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};"],"names":["Movie","navigate","useNavigate","id","useParams","data","error","isLoading","useGetFilmQuery","authorized","toggleFavorite","isDarkTheme","useUser","isMobile","useDetectDevice","movie","isFavorite","setIsFavorite","useState","useEffect","_currentUser$favorite","currentUser","JSON","parse","localStorage","getItem","favoritesMoviesIds","includes","_jsx","className","styles","children","movieDark","movieMobile","movieMobileDark","Loader","loader","_Fragment","_jsxs","movieDetailsDark","movieDetails","movieDetailsMobile","movieDetailsMobileDark","titleWrapperDark","titleWrapper","Title","src","Poster","alt","poster","descriptionWrapperDark","descriptionWrapper","Year","Genre","Plot","Director","Actors","managWrapper","onClick","handleClickLike","replace","storedData","users","map","user","login","updatedFavorites","filter","movieId","Set","setItem","stringify","updatedUser","find","style","color"],"sourceRoot":""}